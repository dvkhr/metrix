// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/metrics.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetricType представляет тип метрики.
type MetricType int32

const (
	MetricType_GAUGE   MetricType = 0
	MetricType_COUNTER MetricType = 1
)

// Enum value maps for MetricType.
var (
	MetricType_name = map[int32]string{
		0: "GAUGE",
		1: "COUNTER",
	}
	MetricType_value = map[string]int32{
		"GAUGE":   0,
		"COUNTER": 1,
	}
)

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}

func (x MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_metrics_proto_enumTypes[0].Descriptor()
}

func (MetricType) Type() protoreflect.EnumType {
	return &file_proto_metrics_proto_enumTypes[0]
}

func (x MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricType.Descriptor instead.
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{0}
}

// MetricRequest представляет запрос на отправку метрики.
type MetricRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          MetricType             `protobuf:"varint,2,opt,name=type,proto3,enum=metrics.MetricType" json:"type,omitempty"`
	Value         float64                `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Delta         int64                  `protobuf:"varint,4,opt,name=delta,proto3" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricRequest) Reset() {
	*x = MetricRequest{}
	mi := &file_proto_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricRequest) ProtoMessage() {}

func (x *MetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricRequest.ProtoReflect.Descriptor instead.
func (*MetricRequest) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *MetricRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MetricRequest) GetType() MetricType {
	if x != nil {
		return x.Type
	}
	return MetricType_GAUGE
}

func (x *MetricRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MetricRequest) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

// MetricResponse представляет ответ на запрос.
type MetricResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricResponse) Reset() {
	*x = MetricResponse{}
	mi := &file_proto_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricResponse) ProtoMessage() {}

func (x *MetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricResponse.ProtoReflect.Descriptor instead.
func (*MetricResponse) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *MetricResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MetricResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// BatchRequest представляет запрос на пакетное обновление метрик.
type BatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []*MetricRequest       `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	mi := &file_proto_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *BatchRequest) GetMetrics() []*MetricRequest {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// BatchResponse представляет ответ на пакетное обновление метрик.
type BatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metrics       []*MetricRequest       `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchResponse) Reset() {
	*x = BatchResponse{}
	mi := &file_proto_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponse) ProtoMessage() {}

func (x *BatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponse.ProtoReflect.Descriptor instead.
func (*BatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *BatchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BatchResponse) GetMetrics() []*MetricRequest {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// GetAllMetricsRequest представляет запрос на получение всех метрик.
type GetAllMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllMetricsRequest) Reset() {
	*x = GetAllMetricsRequest{}
	mi := &file_proto_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMetricsRequest) ProtoMessage() {}

func (x *GetAllMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetAllMetricsRequest) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{4}
}

// GetAllMetricsResponse представляет ответ с массивом всех метрик.
type GetAllMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []*MetricRequest       `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllMetricsResponse) Reset() {
	*x = GetAllMetricsResponse{}
	mi := &file_proto_metrics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMetricsResponse) ProtoMessage() {}

func (x *GetAllMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetAllMetricsResponse) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllMetricsResponse) GetMetrics() []*MetricRequest {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_proto_metrics_proto protoreflect.FileDescriptor

const file_proto_metrics_proto_rawDesc = "" +
	"\n" +
	"\x13proto/metrics.proto\x12\ametrics\"t\n" +
	"\rMetricRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.metrics.MetricTypeR\x04type\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x01R\x05value\x12\x14\n" +
	"\x05delta\x18\x04 \x01(\x03R\x05delta\"D\n" +
	"\x0eMetricResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"@\n" +
	"\fBatchRequest\x120\n" +
	"\ametrics\x18\x01 \x03(\v2\x16.metrics.MetricRequestR\ametrics\"u\n" +
	"\rBatchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\ametrics\x18\x03 \x03(\v2\x16.metrics.MetricRequestR\ametrics\"\x16\n" +
	"\x14GetAllMetricsRequest\"I\n" +
	"\x15GetAllMetricsResponse\x120\n" +
	"\ametrics\x18\x01 \x03(\v2\x16.metrics.MetricRequestR\ametrics*$\n" +
	"\n" +
	"MetricType\x12\t\n" +
	"\x05GAUGE\x10\x00\x12\v\n" +
	"\aCOUNTER\x10\x012\xe5\x02\n" +
	"\x0eMetricsService\x12=\n" +
	"\n" +
	"SendMetric\x12\x16.metrics.MetricRequest\x1a\x17.metrics.MetricResponse\x12<\n" +
	"\vBatchUpdate\x12\x15.metrics.BatchRequest\x1a\x16.metrics.BatchResponse\x12<\n" +
	"\tGetMetric\x12\x16.metrics.MetricRequest\x1a\x17.metrics.MetricResponse\x12N\n" +
	"\rGetAllMetrics\x12\x1d.metrics.GetAllMetricsRequest\x1a\x1e.metrics.GetAllMetricsResponse\x12H\n" +
	"\x0eCheckDBConnect\x12\x1d.metrics.GetAllMetricsRequest\x1a\x17.metrics.MetricResponseB+Z)github.com/dvkhr/metrix.git/internal/grpcb\x06proto3"

var (
	file_proto_metrics_proto_rawDescOnce sync.Once
	file_proto_metrics_proto_rawDescData []byte
)

func file_proto_metrics_proto_rawDescGZIP() []byte {
	file_proto_metrics_proto_rawDescOnce.Do(func() {
		file_proto_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_metrics_proto_rawDesc), len(file_proto_metrics_proto_rawDesc)))
	})
	return file_proto_metrics_proto_rawDescData
}

var file_proto_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_metrics_proto_goTypes = []any{
	(MetricType)(0),               // 0: metrics.MetricType
	(*MetricRequest)(nil),         // 1: metrics.MetricRequest
	(*MetricResponse)(nil),        // 2: metrics.MetricResponse
	(*BatchRequest)(nil),          // 3: metrics.BatchRequest
	(*BatchResponse)(nil),         // 4: metrics.BatchResponse
	(*GetAllMetricsRequest)(nil),  // 5: metrics.GetAllMetricsRequest
	(*GetAllMetricsResponse)(nil), // 6: metrics.GetAllMetricsResponse
}
var file_proto_metrics_proto_depIdxs = []int32{
	0, // 0: metrics.MetricRequest.type:type_name -> metrics.MetricType
	1, // 1: metrics.BatchRequest.metrics:type_name -> metrics.MetricRequest
	1, // 2: metrics.BatchResponse.metrics:type_name -> metrics.MetricRequest
	1, // 3: metrics.GetAllMetricsResponse.metrics:type_name -> metrics.MetricRequest
	1, // 4: metrics.MetricsService.SendMetric:input_type -> metrics.MetricRequest
	3, // 5: metrics.MetricsService.BatchUpdate:input_type -> metrics.BatchRequest
	1, // 6: metrics.MetricsService.GetMetric:input_type -> metrics.MetricRequest
	5, // 7: metrics.MetricsService.GetAllMetrics:input_type -> metrics.GetAllMetricsRequest
	5, // 8: metrics.MetricsService.CheckDBConnect:input_type -> metrics.GetAllMetricsRequest
	2, // 9: metrics.MetricsService.SendMetric:output_type -> metrics.MetricResponse
	4, // 10: metrics.MetricsService.BatchUpdate:output_type -> metrics.BatchResponse
	2, // 11: metrics.MetricsService.GetMetric:output_type -> metrics.MetricResponse
	6, // 12: metrics.MetricsService.GetAllMetrics:output_type -> metrics.GetAllMetricsResponse
	2, // 13: metrics.MetricsService.CheckDBConnect:output_type -> metrics.MetricResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_metrics_proto_init() }
func file_proto_metrics_proto_init() {
	if File_proto_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_metrics_proto_rawDesc), len(file_proto_metrics_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_metrics_proto_goTypes,
		DependencyIndexes: file_proto_metrics_proto_depIdxs,
		EnumInfos:         file_proto_metrics_proto_enumTypes,
		MessageInfos:      file_proto_metrics_proto_msgTypes,
	}.Build()
	File_proto_metrics_proto = out.File
	file_proto_metrics_proto_goTypes = nil
	file_proto_metrics_proto_depIdxs = nil
}
